//: Playground - noun: a place where people can play

import UIKit

var str = "Hello, playground: ENUMS"



enum CompassPoint {
    case North
    case South
    case East
    case West
}

CompassPoint.East


///////////////


enum Matter {
    case Solid, Liquid, Gas
}

var directionToHead: CompassPoint

directionToHead = .West

var currentMatter = Matter.Liquid

switch currentMatter {
    case .Solid:
        println("It was Solid")
    case .Liquid:
        println("It was liquid")
    case .Gas:
        println("It was Gas")
}


////////////////


enum Computer {
    // RAM, Procesor
    case Desktop(Int, String)
    
    // Screen size
    case Laptop(Int)
    
    // Weight, height, width
    case Phone(Int, Int, Int)
    
    // Width, height
    case Table()
    
}


var computer = Computer.Desktop(8, "17")

switch computer {
    case .Desktop(let ram, let processor):
        println("Was desktop with \(ram)gb of RAM and a \(processor) processor")
    
    
    default:
        println("No Idea!")
}


/////////////////


enum Planet:Int {
    case Mercury = 1, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune
}

Planet.Earth.rawValue

let thisPlanet:Planet? = Planet(rawValue: 5) //  identifies Jupiter from its raw value of 5


if let posiblePlanet = Planet(rawValue: 5) {
    switch posiblePlanet {
        case .Jupiter:
            println("was jupiter")
        default:
            println("i do not know")
    }
} else {
    println("No planet found here")
}


//////////////////////


let positionToFind = 9

if let somePlanet = Planet(rawValue: positionToFind) {
    switch somePlanet {
        case .Earth:
            println("Mostly harmless")
        default:
            println("Not a safe place for humans")
    }
} else {
    println("There isn't a planet at position \(positionToFind)")
}

// If you try to find a planet with a position of 9, the optional Planet value returned by the raw value initializer will be nil
